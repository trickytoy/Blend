[
    {
      "id": "22",
      "data": {
        "label": "COMP1511",
        "title": "Programming Fundamentals",
        "Description": "From recent innovations in AI like self-driving cars to humanoid robotics navigating complex environments, leapfrogs in battery technology to sequencing the human genome - the world is benefiting and evolving thanks to computer systems. At the core of all these systems are computers executing instructions to solve exciting problems.",
        "Condition": "Access past handbook editions (2018 and prior)"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "20",
      "data": {
        "label": "COMP1531",
        "title": "Software Engineering Fundamentals",
        "Description": "This course teaches students about software engineering principles via exposure to the important practice of building correct products in effectively functioning teams.",
        "Condition": "Prerequisite: COMP1511 or DPST1091 or COMP1917 or COMP1921\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "21",
      "data": {
        "label": "COMP1010",
        "title": "The Art of Computing",
        "Description": "This course aims to provide a grounding in computational thinking for anyone who wants one. It assumes no previous programming background, but does assume that all incoming students have used digital devices, such as tablets and smart phones, for a range of tasks (e.g. social networking, reading, essay writing, etc.). The course will use Python as the programming medium and use real world examples from a variety of domains to motivate understanding.",
        "Condition": "Exclusion: COMP1511/DPST1091\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "25",
      "data": {
        "label": "COMP1521",
        "title": "Computer Systems Fundamentals",
        "Description": "This course introduces students to how computer systems are structured in terms of basic electronic components, how they are used to implement procedural programs, and how they are structured as a collection of software layers. It introduces students to low-level software layers such as operating systems, and introduces concurrency concepts. The goal is to give students a solid understanding of what happens when high-level programs are executed, as a basis for further study in important areas of computing such as computer architecture, operating systems.",
        "Condition": "Prerequisite: COMP1511 or DPST1091 or COMP1911 or COMP1917\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "24",
      "data": {
        "label": "COMP1911",
        "title": "Computing 1A",
        "Description": "From recent innovations in AI like self-driving cars to humanoid robotics navigating complex environments, leapfrogs in battery technology to sequencing the human genome - the world is benefiting and evolving thanks to computer systems. At the core of all these systems are computers executing instructions to solve exciting problems.",
        "Condition": "Prerequisite: Enrolment in a non-CSE major (no BINF, COMP, or SENG)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "26",
      "data": {
        "label": "COMP1939",
        "title": "Cyber Security Workshop 1 - Penetration Testing",
        "Description": "This workshop course provides students with a series of practical challenges and applied exercises to apply and integrate the cyber security and computing knowledge and skills they have mastered in their first year of cyber security study.",
        "Condition": "Prerequisite or Co-requisite: COMP1521\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "27",
      "data": {
        "label": "COMP2041",
        "title": "Software Construction: Techniques and Tools",
        "Description": "This course is designed for students who have mastered the basics of programming. It aims to broaden your knowledge of techniques and tools for software construction. It covers: Unix filters, shell scripting and Python (for programming), git (for version control), docker (for portable deployment), package managers (for configuration and deployment). At the end of this course, you should be able to build moderate-sized software systems and configure them so that others can download and deploy your work.",
        "Condition": "Prerequisite: COMP1511 OR DPST1091 OR COMP1917 OR COMP1921\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "28",
      "data": {
        "label": "COMP2111",
        "title": "System Modelling and Design",
        "Description": "This course introduces rigorous and formal methods for modelling system behaviour. These methods support the modelling of abstract specifications and the refinement of abstract specifications through to concrete implementations. Consistency of formal development is verified by proof obligations and formal proof. The course will cover: specification, refinement, implementation, proof obligations, and proof. It re-inforces, and builds on, prerequisite knowledge from MATH1081, especially set theory and predicate logic. The course will use case-studies and assignments to develop competence. The methods developed in this course are used in the SENG2011 workshops and in safety-critical industrial contexts.",
        "Condition": "Prerequisite: MATH1081 AND (COMP1511 OR DPST1091 OR COMP1917 OR COMP1921)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "29",
      "data": {
        "label": "COMP2121",
        "title": "Microprocessors and Interfacing",
        "Description": "Instruction Set Architecture (ISA), Floating point number representation, computer arithmetic, assembly and machine language programming, machine language fundamentals; addressing modes; instruction repertoire, assembly language programming methodology, interrupts and I/O interfacing (hardware and software), serial communication, timers, analog input and output, converting analog signals to digital signals (data acquisition), taking input from a variety of sensors and driving actuators, buses and memory system, low level device drivers.",
        "Condition": "Prerequisite: COMP1917 OR COMP1921 OR COMP1511 OR DPST1091 OR COMP1521 OR DPST1092 OR (COMP1911 AND MTRN2500)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "23",
      "data": {
        "label": "COMP1337",
        "title": "Foundations of Cyber Security",
        "Description": "This course provides students with an introduction to the rapidly growing field of cyber security. It is suitable for anyone who wishes to understand more about this fascinating and rapidly emerging global challenge. The course provides an overview of the main aspects of contemporary cyber security, including cyber crime, cyber criminals, cyber war, scams, exploitation, human errors and mistakes, vulnerabilities, responding to emergencies, sensible risk assessment and risk management.",
        "Condition": "Prerequisite: Enrolment in 3777 Bachelor of Cyber Security\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "30",
      "data": {
        "label": "COMP2218",
        "title": "Human Centric Security",
        "Description": "This course explores the intersection of cyber security and human behaviour, emphasising the importance of designing practical systems that are not only secure and robust technically but also in operation in an environment involving humans. It delves deeper than traditional cyber security, exploring the crucial role human behaviour plays in strengthening and weakening the security of systems.",
        "Condition": "Prerequisite: COMP1337\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "31",
      "data": {
        "label": "COMP2511",
        "title": "Object-Oriented Design & Programming",
        "Description": "COMP2511 builds on the foundation of first-year CSE courses, and begins to answer the questions: \"What does good software look like?\" and \"How do you build software that is flexible, reusable and maintainable\". The course introduces students to the Object-Oriented Programming paradigm and explores how OOP attempts to solve the problem of good software design. Students explore fundamental Design Patterns in designing, writing and testing software, and how to apply these strategies to both theoretical and real-world problems. The course also teaches an appreciation for elegantly written code, problem solving and finding well-designed solutions to problems that have longevity of software in mind.",
        "Condition": "Prerequisite: COMP1531 AND (COMP2521 OR COMP1927)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "32",
      "data": {
        "label": "COMP2521",
        "title": "Data Structures and Algorithms",
        "Description": "The aim of this course is to get you to think like a computer scientist. This certainly sounds like a noble goal... but what does it really mean? How does a scientist, let alone a computer scientist, actually think?",
        "Condition": "Prerequisite: COMP1511 or DPST1091 or COMP1917 or COMP1921\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "33",
      "data": {
        "label": "COMP3121",
        "title": "Algorithm Design and Analysis",
        "Description": "How would you convince a colleague that your program is correct, and that theirs is flawed?",
        "Condition": "Prerequisite: COMP1927 or COMP2521\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "34",
      "data": {
        "label": "COMP3131",
        "title": "Programming Languages and Compilers",
        "Description": "This subject focusses on basic compiler techniques needed to implement programming languages in a virtual machine (with emphasis on the compiler front end). By writing a compiler in Java to translate a variant of C into Java bytecode, you are also expected to gain a good understanding of important fundamental principles in object-oriented programming languages and develop further your programming and software engineering skills.",
        "Condition": "Prerequisite: COMP2511 or COMP2911\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "35",
      "data": {
        "label": "COMP3141",
        "title": "Software System Design and Implementation",
        "Description": "This course will present rigorous and formal methods for the design and implementation phases of software system development. Also considered are testing and reuse of designs. As far as possible, software tools that can assist the process will be used. The material will be presented using case studies, and students will be required to undertake a project.",
        "Condition": "Prerequisite: COMP1927 or COMP2521\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "36",
      "data": {
        "label": "COMP3142",
        "title": "Software Testing and Quality Assurance",
        "Description": "Software plays an important role in our daily life. It is important to construct robust, operational software, especially under limited development budget and time constraints. To address this problem, a thorough verification and validation process is needed.",
        "Condition": "Prerequisite: COMP1531, COMP2511 and COMP2521\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "37",
      "data": {
        "label": "COMP3151",
        "title": "Foundations of Concurrency",
        "Description": "Concurrency = processes + communication. Communication via shared variables vs message passing. Models of concurrency: true concurrency vs interleaving. Abstractions: atomicity, locks and barriers, semaphores, monitors, threads, RPC, rendezvous. Classical problems: mutual exclusion, dining philosophers, sleeping barber, termination detection, gravitational N-body problem.Practical work: programming assignments and proving of program safety and liveness properties.",
        "Condition": "Prerequisite: COMP1927 OR (COMP1521/DPST1092 AND COMP2521)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "39",
      "data": {
        "label": "COMP3161",
        "title": "Concepts of Programming Languages",
        "Description": "This course discusses and relates a range of programming language concepts and paradigms, including imperative, object-oriented, functional, concurrent & parallel programming. It covers the theoretical foundations (syntax, operational, axiomatic and denotational semantics) as well as practical development and implementation aspects (dynamic and strong typing, polymorphism, overloading, automatic memory management, and concurrency). Due to the course topics, a variety of programming languages will be studied and used. Assignments will be in the programming language Haskell, but no previous knowledge of Haskell is assumed.",
        "Condition": "Prerequisite: COMP2521 or COMP1927\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "41",
      "data": {
        "label": "COMP3222",
        "title": "Digital Circuits and Systems",
        "Description": "This course teaches students the fundamentals of digital design.",
        "Condition": "Prerequisite: COMP2121 OR COMP1521 OR DPST1092\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "40",
      "data": {
        "label": "COMP3211",
        "title": "Computer Architecture",
        "Description": "Computer architecture plays a crucial role in defining and bridging the interface between hardware and software in a computer system. It serves as the foundation upon which both hardware and software components are designed and interact with each other. A study of computer architecture complements the study of programming language and algorithm, compiler, and operating system on the software side of the interface, and the study of embedded system, FPGA and VLSI design on the hardware side of the interface.",
        "Condition": "Prerequisite: COMP3222 or ELEC2141.\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "42",
      "data": {
        "label": "COMP3231",
        "title": "Operating Systems",
        "Description": "Operating systems are an essential part of computer systems, so a course on operating systems is an essential part of any computer science or computer engineering program. This course provides an in-depth understanding of the underlying operating systems that students have implicitly relied upon when developing applications in the foundational courses within Computer Science and Engineering. The knowledge gained will continue to be relevant to your future career when developing systems and applications.",
        "Condition": "Prerequisite: (COMP1521 or DPST1092 or COMP2121 or ELEC2142) and (COMP2521 or COMP1927)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "43",
      "data": {
        "label": "COMP3311",
        "title": "Database Systems",
        "Description": "This course aims to explore in depth the practice of developing database applications and the theory behind relational database systems. It will also give a very brief overview of the technologies used in implementing database management systems and the past, present and future of database systems.",
        "Condition": "Prerequisite: COMP2521 or COMP1927\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "44",
      "data": {
        "label": "COMP3421",
        "title": "Computer Graphics",
        "Description": "In this course, you will delve into the fundamentals and practical aspects of Computer Graphics by working with game engines. You will gain knowledge and skills in developing 2D, 3D, and Virtual Reality-based graphical objects and environments using game engines including Unreal Engine and Unity. Additionally, you will understand computer graphics concepts, including lighting, reflection, static meshes, 2D Transforms, 3D Transforms, surface, texture maps, materials, cameras, object physical behaviors, collision detection, hierarchical modeling of objects, shaders, and rendering.",
        "Condition": "Prerequisite: COMP2511 or COMP2911\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "45",
      "data": {
        "label": "COMP3431",
        "title": "Robotic Software Architecture",
        "Description": "An introduction to Intelligent agent design. Picking actions using planning, learning or engineered control. Both practical and theoretical components. Practical component: Re-implement parts of a real agent architecture on a robot. Assignment based. Emphasis on engineering a working system. Theoretical component: Introduction to a variety of research agent architectures including classical planning and reinforcement learning. Lecture and lab based.",
        "Condition": "Prerequisite: COMP2521 or COMP1927, and a WAM of at least 70\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "46",
      "data": {
        "label": "COMP3443",
        "title": "Web Application Security and Testing",
        "Description": "Web applications are currently the predominant source of software vulnerabilities exploited in in online attacks. There is a growing need and growing demand for web programmers to be security aware.",
        "Condition": "Prerequisite: COMP1337\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "47",
      "data": {
        "label": "COMP3444",
        "title": "Privacy Engineering",
        "Description": "Privacy is a significant concern in modern society. Individuals share personal information with many different organizations - healthcare, financial and educational institutions, the census bureau, web services providers and online social networks - often in electronic form. Privacy violations occur when such personal information is inappropriately collected, shared, or used. Privacy Engineering is the discipline concerned with applying an engineering approach to the analysis of privacy problems and the design of solutions in a systematic and sometimes formal manner.  It is concerned with data privacy and overall system privacy, including legal and ethical privacy goals.\n \nThe course provides a comprehensive overview of the field of “Privacy Engineering” and in-depth knowledge on information theoretic concepts and mechanisms for achieving privacy goals, including legal and ethical privacy goals. The course is designed to provide understanding of state-of-the-art privacy-preserving mechanisms including formal and human centric approaches, and the design and assessment of systems with privacy requirements and how to attack them. Students will learn concepts and methods for identifying privacy leakages and creating technologies with provable guarantees of privacy protection. Covered topics include: privacy leakages & attacks (e.g., identifiability of data, record linkage, data profiling, data anonymity, de-identification), privacy-by-design, state-of-the-art privacy enhancing technologies (e.g., differential privacy, k-anonymity), and emerging privacy concepts (e.g. user behavioural privacy, usable privacy, privacy & AI, privacy regulation, and ethics).",
        "Condition": "Prerequisite: COMP1337\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "48",
      "data": {
        "label": "COMP3445",
        "title": "Digital Forensics",
        "Description": "The subject of Digital Forensics is a blend of technical expertise, legal procedures for an expert witness, persuasive report writing and your performance in the theatre of court. This course covers both forensic theory / professional practice, and looks at the underlying engineering of hiding, finding, interpreting and responding to traces. Students will use standard forensic tools to extract, carve and analyse data as well as learning the low-level technical skills and knowledge underlying them. Students will also be introduced to advanced topics such as Cloud Forensics and latest anti-forensics techniques.",
        "Condition": "Prerequisite: COMP1337\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "49",
      "data": {
        "label": "COMP3446",
        "title": "Cloud Security",
        "Description": "This course covers how to securely design and operate cloud infrastructure and how to monitor for compromise and response patterns for security incidents. This is a rapidly changing field and is one of the main areas of attack on enterprise systems.",
        "Condition": "Prerequisite: COMP1337\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "50",
      "data": {
        "label": "COMP3453",
        "title": "Applied Cryptography",
        "Description": "Cryptography is an indispensable tool for protecting information in computer systems. This course is designed to provide an understanding of Cryptographic algorithms and Cryptanalysis with an aim of using them to protect computer systems, networks, and data protection. The course will emphasise on the foundational aspects of encryption and authentication techniques with an aim to use them correctly and effectively in applications.",
        "Condition": "Prerequisite: COMP2521 and MATH1081\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "52",
      "data": {
        "label": "COMP3821",
        "title": "Extended Algorithm Design and Analysis",
        "Description": "How can a practitioner of algorithms help small-scale producers interested in sustainable farming? How can you solve strategy games by efficiently using computation time and memory? What do the relationships between difficult problems imply about the existence of feasible solutions to them, from both theoretical and practical standpoints?",
        "Condition": "Prerequisite: (Min mark of 70 in COMP1927 or COMP2521) and (min mark of 70 in MATH1081 or enrolment in 3785)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "53",
      "data": {
        "label": "COMP3891",
        "title": "Extended Operating Systems",
        "Description": "Operating systems are an essential part of computer systems, a course on operating systems is an essential part of any computer science or computer engineering program. This course provides an in-depth understanding of the underlying operating systems that students have implicitly relied upon when developing applications in the foundational courses within Computer Science and Engineering. The knowledge gained will continue to be relevant to your future career when developing systems and applications.",
        "Condition": "Prerequisite: (COMP1521 or DPST1092 or COMP2121) and (COMP2521 or COMP1927) and a WAM of at least 75\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "54",
      "data": {
        "label": "COMP3900",
        "title": "Computer Science Project",
        "Description": "Welcome to the Information Technology/Computer Science Project Course, where theory meets practice in a hands-on exploration of real-world projects. This course is designed to elevate your programming skills by immersing you in the intricacies of coding, debugging, and optimizing software solutions. As you apply your theoretical knowledge of information technology/computer science concepts, algorithms, and data structures, you will actively bridge the gap between theoretical understanding and practical implementation. This course places a strong emphasis on teamwork and effective collaboration. You will navigate the challenges of group projects, learning to work seamlessly with peers, share responsibilities, and communicate ideas effectively. Beyond coding and collaboration, the course offers a comprehensive exploration of project management skills. From planning and scheduling to task prioritization, you will gain insights into the entire project lifecycle, experiencing firsthand the evolution of a concept into a completed solution. Furthermore, you will learn the art of crafting clear and concise project reports, and the skills to deliver impactful presentations.",
        "Condition": "Prerequisite: COMP1531, and COMP2521 or COMP1927, and enrolled in a BSc Computer Science major or Advanced Computer Science Honours major with completion of 102 UOC.\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "58",
      "data": {
        "label": "COMP4121",
        "title": "Advanced Algorithms",
        "Description": "This course is a continuation of our introductory algorithms courses COMP3121/3821/9101/9801. We will cover some of the basic randomised algorithms and data structures, such as randomised hashing, skip-lists, order statistics and Karger's randomised Min Cut algorithm. We will then look at the Markov chains and the Google PageRank algorithm, the Hidden Markov Models and the Viterbi Algorithm, and then cover in quite a detail a variety of other algorithms important to the present day practice, such as the recommender systems as well as some of the algorithms used in Data Science. We will cover parts of three books: our COMP3121/3821/9101/9801 textbook Algorithm Design by Kleinberg and Tardosh, Networked Life by Mung Chiang and Foundations of Data Science by Blum, Hopcroft and Kannan. The first two books are available in the bookstore. A preprint of the third book is available for free at https://www.cs.cornell.edu/jeh/book.pdf.",
        "Condition": "Prerequisite: COMP3121 or COMP3821.\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "59",
      "data": {
        "label": "COMP4128",
        "title": "Programming Challenges",
        "Description": "How do competitive programmers solve complex problems in a matter of minutes?",
        "Condition": "Prerequisite: COMP3821, or (COMP3121 and a 75 WAM)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "60",
      "data": {
        "label": "COMP4141",
        "title": "Theory of Computation",
        "Description": "Computability: formal languages and problems, Turing Machines (TMs), computability, (semi-)decidability, universal TMs, Church-Turing thesis, halting problem, reduction and undecidability proofs, examples; Complexity: run time, space, complexity classes, non-determinism and NP, polynomial reductions and NP completeness, optimisation problems and approximation, randomisation; Languages and Automata: regular expressions and languages, finite automata, determinisation, context-free grammars and languages (CFLs), Chomsky normal form, word problems, pumping lemma, push-down automata, decidability problems for CFLs; Semantics and Correctness: while programs, assertions and program correctness, Hoare logic, loops and loop invariants, relative completeness of Hoare logic (and its role in a proof of Gödel's incompleteness result)",
        "Condition": "Prerequisite: MATH1081, and COMP1927 or COMP2521\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "65",
      "data": {
        "label": "COMP4511",
        "title": "User Interface Design and Construction",
        "Description": "COMP4511 is a hands-on project-based course designed to build and solidify the basic skills you acquired in COMP3511/9511. Students will be required to build their interface at least three times (remember the process is iterative!), once as a low fidelity prototype, moving to a higher fidelity electronic prototype and finishing with a beta version of the app. This semester, we will be using React to help us write the app. The course will provide you with a basic understanding and the building blocks required to create your app, and let you guide the design and development process.",
        "Condition": "Prerequisite: a mark of at least 70 in COMP3511 and a mark of at least 65 in COMP2511\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "51",
      "data": {
        "label": "COMP3511",
        "title": "Human Computer Interaction",
        "Description": "The course covers topics related to User Interface Design and Visual Design Principles. These topics aim to equip you with the skills necessary to design websites, mobile apps, and various software packages. You will learn how to apply a User-Centered Design process, which involves data collection from users, Requirement Analysis, Design, Prototyping, and Usability Evaluation. This process ensures that the final product is tailored to meet users' needs.",
        "Condition": "Prerequisite: Completion of 48 UOC\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "66",
      "data": {
        "label": "COMP4601",
        "title": "Design Project B",
        "Description": "COMP4601 is a team-based project development course involving the analysis, design and implementation of embedded, high performance or low power FPGA-based accelerators using high-level synthesis.",
        "Condition": "Prerequisite: COMP3211 and COMP3601.\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "71",
      "data": {
        "label": "COMP4961",
        "title": "Computer Science Thesis A",
        "Description": "The thesis provides an opportunity for you to bring together engineering principles learned over the previous years of study, and apply these principles to innovatively solve problems such as the development of specific designs and/or the investigation of various research hypotheses. Thesis projects are complex, open-ended problems that allow room for your creativity, and the acquisition, analysis, and interpretation of results. Typically, the project you work with will have multiple possible solutions or conclusions and sufficient complexity to require a degree of project planning. The thesis requires you to formulate problems in engineering terms, manage an engineering project and find solutions by applying engineering methods. You will also develop an ability to work in a research and development environment.",
        "Condition": "Prerequisite: Enrolment in 4515 Computer Science (Hons) or 3779 Advanced Computer Science (Hons)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "72",
      "data": {
        "label": "COMP4962",
        "title": "Computer Science Thesis B",
        "Description": "The thesis provides an opportunity for you to bring together engineering principles learned over the previous years of study, and apply these principles to innovatively solve problems, which may include the development of specific designs and/or the investigation of various research hypotheses. Thesis projects are complex, open-ended problems that allow room for your creativity, and the acquisition, analysis, and interpretation of results. Typically, the project you work with will have multiple possible solutions or conclusions and sufficient complexity to require a degree of project planning. The thesis requires you to formulate problems in engineering terms, manage an engineering project and find solutions by applying engineering methods. You will also develop an ability to work in a research and development environment.",
        "Condition": "Prerequisite: COMP4961\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "73",
      "data": {
        "label": "COMP4963",
        "title": "Computer Science Thesis C",
        "Description": "The thesis provides an opportunity for you to bring together engineering principles learned over the previous years of study, and apply these principles to innovatively solve problems, which may include the development of specific designs and/or the investigation of various research hypotheses. Thesis projects are complex, open-ended problems that allow room for your creativity, and the acquisition, analysis, and interpretation of results. Typically, the project you work with will have multiple possible solutions or conclusions and sufficient complexity to require a degree of project planning. The thesis requires you to formulate problems in engineering terms, manage an engineering project and find solutions by applying engineering methods. You will also develop an ability to work in a research and development environment.",
        "Condition": "Prerequisite: COMP4962\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "74",
      "data": {
        "label": "COMP6080",
        "title": "Web Front-End Programming",
        "Description": "COMP6080 aims to develop your confidence in building modern web-based applications to industry standards. This occurs through the introduction of a range of basic concepts surrounding HTML, CSS, Vanilla Javascript, Javascript Declarative Frameworks, UI/UX Principles, Accessibility, Network & Asynchronous Programming, Front-end Testing, and other basic infrastructure.",
        "Condition": "Prerequisite: COMP1531 AND (COMP2521 OR COMP1927)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "75",
      "data": {
        "label": "COMP6131",
        "title": "Software Security Analysis",
        "Description": "This course is designed to provide a systematic exploration of automated source code analysis and verification techniques, with the aim of gaining hands-on experience in implementing code analysis tools to identify common yet important software vulnerabilities in software systems. By taking this course, students can put static analysis and verification theories and advanced techniques into practice. They will be able to build source code analysis tools (e.g., written in C++) based on modern compilers and popular open-source frameworks to scan, comprehend and detect programming mistakes and vulnerabilities with the purpose of enhancing code quality and security.",
        "Condition": "Prerequisite: MATH1081 and (COMP6771 or a mark of at least 70 in COMP2521)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "87",
      "data": {
        "label": "COMP6771",
        "title": "Advanced C++ Programming",
        "Description": "COMP6771 is an advanced programming course teaching practical aspects of intermediate/advanced C++ programming. The course focuses on teaching the fundamentals of C++, followed by exploring powerful abstractions that C++ enables. This course focuses on using abstractions as well as building abstractions.",
        "Condition": "Prerequisite: COMP2511 or COMP2911\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "76",
      "data": {
        "label": "COMP6420",
        "title": "Hardware Security",
        "Description": "The functionality and capability of computer systems are defined by their real-world hardware. Likewise, the cyber security of computer systems depends upon the security of their underlying hardware. This course is designed to explore both hardware security and trust in hardware, providing a comprehensive understanding of the underpinning principles and practices which apply to both the security and trust of computer systems, from printed circuit boards to individual integrated circuits. Students will explore theoretical aspects of what makes hardware secure, performing threat modelling and understanding the state of the art in hardware security, as well as get hands-on experience with practical attacks and defences for both virtual and real-world hardware. The course will equip students with the skills necessary to analyse, design, and implement hardware security measures.",
        "Condition": "Prerequisite: COMP1521 and (COMP3222 or ELEC2141)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "88",
      "data": {
        "label": "COMP6841",
        "title": "Extended Security Engineering and Cyber Security",
        "Description": "In this introductory cybersecurity course we look at Security Engineering – the engineering principles behind designing, monitoring, and maintaining security in the face of an adversary.  We explore selected case studies and examine the practical principles behind effective security. We introduce the fundamental ideas of security and then we look at how these are applied in current cyber security practice. We will pay particular attention to systems which fail and the importance of thinking like an attacker. This course involves analysis, critical thinking and design. A cunning and devious mind will be an asset. Although our main concern is cybersecurity, the engineering principles we cover apply to security more generally.",
        "Condition": "Prerequisite: Completion of 30 UOC, and COMP1927 or COMP2521\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "77",
      "data": {
        "label": "COMP6445",
        "title": "Digital Forensics",
        "Description": "The subject of Digital Forensics is a blend of technical expertise, legal procedures for an expert witness, persuasive report writing and your performance in the theatre of court. This course covers both forensic theory / professional practice, and looks at the underlying engineering of hiding, finding, interpreting and responding to traces. Students will use standard forensic tools to extract, carve and analyse data as well as learning the low-level technical skills and knowledge underlying them. Students will also be introduced to advanced topics such as Cloud Forensics and latest anti-forensics techniques.",
        "Condition": "Prerequisite: COMP3441 or COMP6441 or COMP6841\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "78",
      "data": {
        "label": "COMP6447",
        "title": "System and Software Security Assessment",
        "Description": "This course looks at cyber attack and defence. Students learn how to assess and identify vulnerabilities and how vulnerabilities are exploited. Students learn the principles and theory of exploitation, the common security models, and how approaches to exploitation and defence have evolved over time.",
        "Condition": "Prerequisite: A mark of at least 65 in COMP6841, or a mark of at least 75 in COMP6441, or COMP3441, or COMP1337\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "79",
      "data": {
        "label": "COMP6448",
        "title": "Security Engineering Masterclass",
        "Description": "This is an occasional course that will involve a visiting expert in the security area giving a series of lectures and workshops on an advanced topic in cyber security. The course may run in intensive mode or in standard in-person weekly or fortnightly mode. The precise timing and topics depend on the visitor.",
        "Condition": "Prerequisite: COMP6841 or COMP6441 or COMP1337\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "80",
      "data": {
        "label": "COMP6451",
        "title": "Cryptocurrency and Distributed Ledger Technologies",
        "Description": "Cryptocurrency and Distributed Ledger Technologies are a currently emerging area of technology that draws on multiple areas of computer science to implement systems that provide secure infrastructure for important societal functions, including financial transactions and the management of commercial trust relationships.",
        "Condition": "Pre-requisite: COMP2521 OR COMP9024\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "81",
      "data": {
        "label": "COMP6452",
        "title": "Software Architecture for Blockchain Applications",
        "Description": "This course addresses the knowledge that is needed in order to build applications based on blockchain technology, by offering an architectural view of software systems that make beneficial use of it. It provides guidance on assessing the suitability of blockchain, on the roles blockchain can play in an architecture, on designing blockchain applications, and on assessing different architecture designs and tradeoffs. It also serves as a reference on blockchain design patterns and design analysis, and refers to practical examples of blockchain-based applications.",
        "Condition": "Prerequisite: COMP1531 AND (COMP2521 OR COMP1927)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "82",
      "data": {
        "label": "COMP6453",
        "title": "Applied Cryptography",
        "Description": "Cryptography is an indispensable tool for protecting information in computer systems. This course is designed to provide an understanding of Cryptographic algorithms and Cryptanalysis with an aim of using them to protect computer systems, networks, and data protection. The course will emphasise on the foundational aspects of encryption and authentication techniques with an aim to use them correctly and effectively in applications.",
        "Condition": "Prerequisite: COMP2521 and (MATH1081 or MATH2400)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "105",
      "data": {
        "label": "COMP9444",
        "title": "Neural Networks and Deep Learning",
        "Description": "Neural networks and deep learning play a critical role in pushing the boundaries of what AI can achieve, making them indispensable for various industries and applications. Their ability to learn and adapt from data has revolutionised many fields and opened up new opportunities for solving complex problems. This course provides an introduction to and deep exploration of neural networks and deep learning principles and practice.",
        "Condition": "Prerequisite: COMP1927 or COMP2521 or MTRN3500\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "83",
      "data": {
        "label": "COMP6713",
        "title": "Natural Language Processing",
        "Description": "Natural language processing (NLP) is a branch of artificial intelligence that deals with computational approaches used to process text.",
        "Condition": "Prerequisite: MATH1081 and (COMP3411 or COMP9444)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "84",
      "data": {
        "label": "COMP6714",
        "title": "Information Retrieval and Web Search",
        "Description": "Information retrieval (IR) is the process of retrieving relevant information by specifying a query to an IR system. Web search is one form of an IR system that allows users to search information on the Internet based on a search engine. It involves computing a numeric score on how well each result matches the query and ranking the results according to this score.",
        "Condition": "Prerequisite: (MATH1081 and (COMP1531 or COMP2041)) or (COMP1927 or COMP2521)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "85",
      "data": {
        "label": "COMP6721",
        "title": "(In-)Formal Methods: The Lost Art",
        "Description": "(In-)Formal Methods are practical structuring and design patterns that encourage programming that is easy to understand and to maintain. They are only a part of the large body of “good programming practices,” distinguished from that larger set because –for the methods we consider– the computer-science community has determined the science behind the structures: we know why they are effective.",
        "Condition": "Pre-requisite: MATH1081 AND COMP2521\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "89",
      "data": {
        "label": "COMP6843",
        "title": "Extended Web Application Security and Testing",
        "Description": "Web applications are currently the predominant source of software vulnerabilities exploited in online attacks. There is a growing need and growing demand for web programmers to be security aware.",
        "Condition": "Prerequisite: COMP6441 or COMP6841 or COMP3441 or COMP1337\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "90",
      "data": {
        "label": "COMP6845",
        "title": "Extended Digital Forensics and Incident Response",
        "Description": "The subject of Digital Forensics is a blend of technical expertise, legal procedures for an expert witness, persuasive report writing and your performance in the theatre of court. This course covers both forensic theory / professional practice, and looking at the underlying engineering of hiding, finding, interpreting and responding to traces. Students will use of standard forensic tools to extract, carve and analyse data as well as learning the low-level technical skills and knowledge underlying them. Students will also be introduced to advanced topics such as Cloud Forensics and latest anti-forensics techniques.",
        "Condition": "Prerequisite: COMP3441 or COMP6441 or COMP6841 or COMP1337\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "91",
      "data": {
        "label": "COMP6991",
        "title": "Solving Modern Programming Problems with Rust",
        "Description": "This course aims to provide commentary and critique on the practice of programming, and the tooling used to program (primarily programming languages themselves). A variety of programming concepts across many programming languages are examined, including: syntax, typing, polymorphism, documentation, testing, meta-programming, concurrency, parallelism, safety, and more. The Rust programming language is used as a reference language to teach considerations behind these concepts. As a language commonly cited to be well-considered, it serves as a good foundation to help students understand where countless other languages may let them down. Lectures will compare and contrast Rust with other languages, but will also discuss where Rust can similarly let students down.",
        "Condition": "COMP1927 or COMP2521\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "92",
      "data": {
        "label": "COMP9242",
        "title": "Advanced Operating Systems",
        "Description": "The course provides students with a deep understanding of modern operating system technology, implementation techniques and research issues.",
        "Condition": "Prerequisite: a mark of at least 75 in either COMP3231 or COMP3891.\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "93",
      "data": {
        "label": "COMP9243",
        "title": "Distributed Systems",
        "Description": "A detailed coverage of distributed systems, with a particular focus on operating systems issues: client-server paradigm, remote-procedure call as OS support for client-server; distributed shared memory, distributed memory coherency; distributed file systems; distributed process management, including load sharing and process migration; concurrency control; fault tolerance, recoverability and distributed transactions; naming; industry standards; case studies.",
        "Condition": "Prerequisite: [COMP3231 or COMP3891] and [COMP3331 or TELE3018].\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "94",
      "data": {
        "label": "COMP9301",
        "title": "Cyber Security Project",
        "Description": "Ever wondered what it's like to do cyber security research? Have a burning desire to solve an interesting security problem of your own?",
        "Condition": "(COMP6441 OR COMP6841 OR COMP1337) AND (COMP6443, or COMP6843, or COMP6445, or COMP6845, or COMP6447) AND enrolled in final year of program\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "95",
      "data": {
        "label": "COMP9302",
        "title": "Cyber Security Project B",
        "Description": "Ever wondered what it's like to do cyber security research? Have a burning desire to solve an interesting security problem of your own?",
        "Condition": "For undergrad: (COMP6441 OR COMP6841 or COMP1337) AND (COMP6443, or COMP6843, or COMP6445, or COMP6845, or COMP6447) AND enrolled in final year of program.\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "96",
      "data": {
        "label": "COMP9312",
        "title": "Data Analytics for Graphs",
        "Description": "Graphs are ubiquitous and are widely used to capture relationships between different entities in real-world applications. However, compared with traditional sequential data (e.g. text and audio), the unstructured property and the sparsity make processing big graphs very challenging. The course will introduce a series of data structures and algorithms for graph processing in terms of database (i.e., big data) and deep learning. Fundamental methods and the state-of-the-art research works will be integrated. The course will serve as a launching pad for those interested in graph analytics, big data processing and graph neural networks.",
        "Condition": "Prerequisite: COMP1927 or COMP2521, and COMP3311\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "97",
      "data": {
        "label": "COMP9313",
        "title": "Big Data Management",
        "Description": "This course introduces the core concepts and technologies involved in managing Big Data. It will first introduce the characteristics of big data and big data analysis. Then, we will learn the open-source big data management framework Hadoop. We will mainly focus on Hadoop MapReduce programming. YARN, HDFS, HBase, and Hive will be briefly introduced as well. We will also learn an open-source memory-based distributed computing framework Spark. Another major focus of this course is algorithm design on large-scale data sets based on big data management frameworks, in various domains such as data stream mining, graph data processing, and finding similar items.",
        "Condition": "Prerequisite: COMP1927 or COMP2521, and COMP3311\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "98",
      "data": {
        "label": "COMP9315",
        "title": "Database Systems Implementation",
        "Description": "This course aims to introduce students to the detailed internal structure of database management systems (DBMSs) such as Oracle or SQL Server. DBMSs contain a variety of interesting data structures and algorithms that are also potentially useful outside the DBMS context; knowing about them is a useful way of extending your general programming background. While the focus is on relational DBMSs, given that they have the best-developed technological foundation, we will also consider more recent developments in the management of large data repositories.",
        "Condition": "Prerequisite: COMP1927 or COMP2521, and COMP3311\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "99",
      "data": {
        "label": "COMP9321",
        "title": "Data Services Engineering",
        "Description": "This course aims to introduce the student to core concepts and practical skills for engineering the data in Web-service-oriented data-driven applications. Specifically, the course aims to expose students to basic infrastructure for building data services on the Web, including techniques to access and ingest data in internal/external sources, develop software services to curate (e.g. extract, transform, correct, aggregate the data), develop services to apply various analytics and develop services to visualize the data to communicate effectively using data. The course uses the Python programming language as the practical basis for its modules. However, the concepts taught are universal and can be applied to any other web development language/framework.",
        "Condition": "Prerequisite: (COMP1531 or COMP2041) and COMP3311\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "102",
      "data": {
        "label": "COMP9334",
        "title": "Capacity Planning of Computer Systems and Networks",
        "Description": "We live in a world that events do not happen instantly. It takes a certain amount of time to download a video from a server to your own mobile device. It takes a certain amount of time for a computer to finish the execution of an algorithm. The time to completion (or response time in performance analysis terminology) is a performance metric that computer scientists and computer engineers should be concerned about because no one wants to wait unnecessarily. If you can understand the factors that determine the response time, then you can influence those factors so that the response time becomes acceptable. This course will take a mathematical modelling and analytical approach to understand response time in computer systems and networks. The primary goal is to explore how mathematical modelling and mathematical methods can be used to model, analyse and design computer systems and networks so that they have good performance. There are three major topics that will be covered by this course:",
        "Condition": "Prerequisite: COMP1511 OR DPST1091 OR COMP1917 OR COMP1921\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "103",
      "data": {
        "label": "COMP9417",
        "title": "Machine Learning and Data Mining",
        "Description": "Machine learning is the algorithmic approach to learning from data. The course also covers aspects of data mining, the application of machine learning to obtain insight from data. In this course machine learning algorithms are placed in the context of their theoretical foundations in order to understand their derivation and correct application. Machine learning also is an empirical science, where performance of algorithms must be rigorously evaluated on datasets. Completion of this course will contribute to further learning in advanced topics such as deep learning, bioinformatics, computer vision, and robotics. Topics covered in the course include: linear models for regression and classification, local methods (nearest neighbour), tree learning, kernel machines, neural networks, unsupervised learning, ensemble learning, and learning theory. To expand and extend the development of theory and algorithms presented in lectures, practical examples will be given in tutorials and programming tasks during the project.",
        "Condition": "Prerequisite: (MATH1081 and (COMP1531 or COMP2041)) or (COMP1927 or COMP2521)\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "104",
      "data": {
        "label": "COMP9418",
        "title": "Advanced Topics in Statistical Machine Learning",
        "Description": "This course presents an in-depth study of statistical machine learning approaches. It aims to provide the student with a solid understanding of methods for learning and inference in structured probabilistic models, with a healthy balance of theory and practice. It will cover topics on the semantics of direct and undirected representations in probabilistic graphical models, exact and approximate inference, and learning of model parameters and structure.",
        "Condition": "Prerequisite: MATH5836 or COMP9417\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "106",
      "data": {
        "label": "COMP9447",
        "title": "Security Engineering Workshop",
        "Description": "Applied workshop in an emerging area in cyber security. The course is supervised and taught by relevant academics and/or industry experts in the field. Areas vary depending on the availability of subject domain experts from time to time. Examples of relevant areas include: Cloud Security, Cryptanalysis on commercial products, mainframe security audit and penetration testing.",
        "Condition": "Prerequisite: COMP6441 or COMP6841 or COMP3441\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "63",
      "data": {
        "label": "COMP4418",
        "title": "Knowledge Representation and Reasoning",
        "Description": "How can you timetable classes to fit everyone’s schedule? Could tactical voting occur in Australia? Can a single computer program play and solve both sudoku and minesweeper?",
        "Condition": "Prerequisite: COMP3411\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "107",
      "data": {
        "label": "COMP9491",
        "title": "Applied Artificial Intelligence",
        "Description": "This course presents some advanced topics in various aspects of artificial intelligence such as computer vision, speech and language processing, deep learning, and knowledge representation and reasoning. The course aims to integrate these various aspects of AI and present case studies where such integration of different methodologies delivers interesting applications. Project development is the major component of this course, to develop a solution to a practical or industry-based problem that requires an integration of more than one type of AI techniques ranging from symbolic AI (e.g. knowledge representation and reasoning) to deep learning, with example applications in computer vision, speech and language processing, etc. Assessment is based on group project development.",
        "Condition": "Two prerequisite conditions:\n1. Students have taken:\n6 UOC from the following: COMP3411; and\n12 UOC from the following: COMP9444/COMP9417/COMP9517/COMP4418\n2. Students must have a WAM of 70 or higher\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "108",
      "data": {
        "label": "COMP9517",
        "title": "Computer Vision",
        "Description": "Computer vision is the interdisciplinary scientific field that develops theories and methods allowing computers to extract high-level information from digital images or videos. From an engineering perspective it seeks to automate perceptual tasks normally performed by the human visual system. Generally, vision is difficult because it is an inverse problem, where only insufficient information is available about the objects of interest in the image data. Physics-based mathematical and statistical models as well as machine-learning methods are used to assist in the task. Current real-world applications are wide-ranging, and include optical character recognition, machine inspection, retail object recognition, 3D model building, remote sensing, medical imaging, autonomous driving, motion capture, surveillance, face recognition, biometrics, and many others. This course provides an introduction to fundamental concepts and an opportunity to develop a real-world application of computer vision.",
        "Condition": "Prerequisite: COMP2521 or COMP1927\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    },
    {
      "id": "109",
      "data": {
        "label": "COMP9727",
        "title": "Recommender Systems",
        "Description": "Recommender systems are information filtering and search tools for providing personalized user interaction and navigation through a complex space of products or services. The aim is to address information overload by providing users with items that better meet their needs and support their decision making. Recommender systems are important commercial tools that are widely used by e-commerce and social media companies to drive sales and user engagement. This course will cover the basic types of recommender system, the main recommendation algorithms, and machine learning and natural language processing techniques used to support recommender systems.",
        "Condition": "Prerequisite: COMP1927 or COMP2521\n\n"
      },
      "position": {
        "x": 0,
        "y": 0
      }
    }
  ]
  
